/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zag_sched.lookups.gui;

import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import zag_sched.lookups.classes.ClassHandler;
import zag_sched.lookups.classes.ClassTypeHandler;
import zag_sched.lookups.classes.Classes;
import zag_sched.lookups.courses.Course;
import zag_sched.lookups.courses.CourseHandler;
import static zag_sched.lookups.gui.JFrameMaster.checkConfirm;
import zag_sched.lookups.logs.LogHandler;
import zag_sched.lookups.lecturers.Lecturer;
import zag_sched.lookups.lecturers.LecturerHandler;
import zag_sched.lookups.departments.Department;
import zag_sched.lookups.departments.DepartmentHandler;
import zag_sched.lookups.divisions.Division;
import zag_sched.lookups.divisions.DivisionHandler;
import zag_sched.lookups.groups.Group;
import zag_sched.lookups.groups.GroupHandler;
import zag_sched.lookups.lecturers.LecturersPositionHandler;

import zag_sched.users.User;
import zag_sched.users.UserHandler;

/**
 *
 * @author Administrator
 */
public class JInternalFrameLookupsClassesCourses extends javax.swing.JInternalFrame {

    private JFrame masterForm;

    /**
     * Creates new form JInternalFrameLookups
     */
    public JInternalFrameLookupsClassesCourses() {
        initComponents();
    }

    public JInternalFrameLookupsClassesCourses(JFrame masterForm) {
        initComponents();
        this.masterForm = masterForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelConsolateTypeId = new javax.swing.JLabel();
        jTextFieldClassId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldClassName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClass = new javax.swing.JTable();
        jButtonAddClass = new javax.swing.JButton();
        jButtonUpdateClass = new javax.swing.JButton();
        jButtonDeleteClass = new javax.swing.JButton();
        jButtonCancelClass = new javax.swing.JButton();
        jComboBoxClassType = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelKanaatId = new javax.swing.JLabel();
        jTextFieldCourseId = new javax.swing.JTextField();
        jLabelKanaatText = new javax.swing.JLabel();
        jTextFieldCourseName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCourse = new javax.swing.JTable();
        jButtonAddCourse = new javax.swing.JButton();
        jButtonUpdateCourse = new javax.swing.JButton();
        jButtonDeleteCourse = new javax.swing.JButton();
        jButtonCancelCourse = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("القاعات");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "القاعات"));
        jPanel1.setForeground(new java.awt.Color(51, 255, 51));

        jLabelConsolateTypeId.setText("كود القاعة");
        jLabelConsolateTypeId.setToolTipText("");

        jTextFieldClassId.setEditable(false);

        jLabel2.setText("اسم القاعة");

        jTableClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "كود القاعة", "اسم القاعة", "نوع القاعة"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClassMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClass);

        jButtonAddClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/Add.gif"))); // NOI18N
        jButtonAddClass.setText("إضافة");
        jButtonAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddClassActionPerformed(evt);
            }
        });

        jButtonUpdateClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/save.png"))); // NOI18N
        jButtonUpdateClass.setText("تعديل");
        jButtonUpdateClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateClassActionPerformed(evt);
            }
        });

        jButtonDeleteClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/delete_ena.png"))); // NOI18N
        jButtonDeleteClass.setText("مسح");
        jButtonDeleteClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteClassActionPerformed(evt);
            }
        });

        jButtonCancelClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/refresh.png"))); // NOI18N
        jButtonCancelClass.setText("إعادة بدء");
        jButtonCancelClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelClassActionPerformed(evt);
            }
        });

        jLabel3.setText("نوع القاعة");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAddClass)
                        .addGap(13, 13, 13)
                        .addComponent(jButtonUpdateClass)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonDeleteClass)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelClass))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelConsolateTypeId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxClassType, 0, 202, Short.MAX_VALUE)
                            .addComponent(jTextFieldClassName)
                            .addComponent(jTextFieldClassId))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldClassId, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabelConsolateTypeId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxClassType, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddClass)
                    .addComponent(jButtonUpdateClass)
                    .addComponent(jButtonDeleteClass)
                    .addComponent(jButtonCancelClass))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "المواد"));

        jLabelKanaatId.setText("كود المادة");

        jTextFieldCourseId.setEditable(false);

        jLabelKanaatText.setText("اسم المادة");

        jTableCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "كود المادة", "اسم المادة"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCourseMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCourse);

        jButtonAddCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/Add.gif"))); // NOI18N
        jButtonAddCourse.setText("إضافة");
        jButtonAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCourseActionPerformed(evt);
            }
        });

        jButtonUpdateCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/save.png"))); // NOI18N
        jButtonUpdateCourse.setText("تعديل");
        jButtonUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateCourseActionPerformed(evt);
            }
        });

        jButtonDeleteCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/delete_ena.png"))); // NOI18N
        jButtonDeleteCourse.setText("مسح");
        jButtonDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCourseActionPerformed(evt);
            }
        });

        jButtonCancelCourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/refresh.png"))); // NOI18N
        jButtonCancelCourse.setText("إعادة بدء");
        jButtonCancelCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelKanaatText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelKanaatId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldCourseName, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCourseId)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdateCourse)
                        .addGap(19, 19, 19)
                        .addComponent(jButtonDeleteCourse)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelCourse)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldCourseId, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabelKanaatId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKanaatText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddCourse)
                    .addComponent(jButtonUpdateCourse)
                    .addComponent(jButtonDeleteCourse)
                    .addComponent(jButtonCancelCourse))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>                        

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {                                         
        getAllClasses();
        getAllCourses();
        
         ////2- Fill Department JCombo
        
         jComboBoxClassType.insertItemAt("", 0);
        jComboBoxClassType.setSelectedIndex(0);
        jComboBoxClassType.removeAllItems();

        LinkedHashMap<String, Integer> classesTypeHM = ClassTypeHandler.getAllClassTypesMap();
        for (String classTypeName : classesTypeHM.keySet()) {
            jComboBoxClassType.addItem(classTypeName);
            System.out.println("Add : " + classTypeName);
        }

        
/*        
         ////2- Fill Division JCombo
        
         jComboBoxDivision.insertItemAt("", 0);
        jComboBoxDivision.setSelectedIndex(0);
        jComboBoxDivision.removeAllItems();

        LinkedHashMap<String, Integer> DivisionHM = DivisionHandler.getAllDivisionsMap();
        for (String divisionName : DivisionHM.keySet()) {
            jComboBoxDivision.addItem(divisionName);
            System.out.println("Add : " + divisionName);
        }
*/
    }                                        

    private void jButtonAddCourseActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        
         int optionChoosen = JFrameMaster.checkConfirm();
         if (optionChoosen == JOptionPane.YES_OPTION) {        
         // 0. read Fields
        
         String courseName = jTextFieldCourseName.getText();
         Course course = new Course(courseName);
      
         // 1. Add row to DB
             CourseHandler.insertCourse(course);
             
         // 2. Add row to JTable
         DefaultTableModel tm = (DefaultTableModel) jTableCourse.getModel();
         Object[] rowData = {course.getCourseId(), course.getCourseName()};

         tm.addRow(rowData);

         /// refresh
         tm.setRowCount(0);
         getAllCourses();

         // 3. Empty fields
         emptyFieldsCourses();

         // 4. show Save Msg
         JOptionPane.showMessageDialog(null, "Data Saved Done", "Saving..", JOptionPane.INFORMATION_MESSAGE);
         // LogHandler.insertLog(10, 4, "Create Kanaat Ok - Kanaat : "+ kanaatText);
         }
    
    }                                                

    private void jButtonUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {                                                    
  
         int optionChoosen = JFrameMaster.checkConfirm();
         if (optionChoosen == JOptionPane.YES_OPTION) {  
         // 1, Read Fields
         int courseId = Integer.parseInt(jTextFieldCourseId.getText());
         String courseName = jTextFieldCourseName.getText();
        
         Course course = new Course(courseId, courseName);
            
         // 2. update DB
          CourseHandler.updateCourse(course);
         // 3. update JTable
         jTableCourse.setValueAt(courseId, jTableCourse.getSelectedRow(), 0);
         jTableCourse.setValueAt(courseName, jTableCourse.getSelectedRow(), 1);
      
         // 4. Empty Fields
         emptyFieldsCourses();
        
       //  LogHandler.insertLog(11, 4, "Update Kanaat Ok - Kanaat : "+groupName);
   
         }
  
    }                                                   

    private void jButtonDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        
         int optionChoosen = JFrameMaster.checkConfirm();
         if (optionChoosen == JOptionPane.YES_OPTION) {  
         //1. read user id
         int courseId = Integer.parseInt(jTextFieldCourseId.getText());
      //   String logDeletedKanaatText = KanaatHandler.getKanaatById(groupId).getKanaatText();
         //2. del from db
         CourseHandler.deleteCourse(courseId);

         // 3. remove From JTable
         DefaultTableModel tm = (DefaultTableModel) jTableCourse.getModel();
         tm.removeRow(jTableCourse.getSelectedRow());

         // 4. empty Fields
         emptyFieldsCourses();
      //   LogHandler.insertLog(12, 4, "Delete Kanaat Ok - Kanaat  : "+logDeletedKanaatText);
         }
         
    }                                                   

    private void jTableCourseMouseClicked(java.awt.event.MouseEvent evt) {                                          
        
         Integer courseId = (Integer) jTableCourse.getValueAt(jTableCourse.getSelectedRow(), 0);
         String courseName = (String) jTableCourse.getValueAt(jTableCourse.getSelectedRow(), 1);
    

         jTextFieldCourseId.setText(courseId.toString());
         jTextFieldCourseName.setText(courseName);
         //   jComboBoxDivision.setSelectedItem(DivisionHandler.getDivisionByName(divisionName).getDivisionName());
          
    }                                         

    private void jButtonCancelCourseActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        emptyFieldsCourses();
    }                                                   

    private void jButtonCancelClassActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        emptyFieldsClasses();
    }                                                  

    private void jButtonDeleteClassActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            //1. read user id
            int classId = Integer.parseInt(jTextFieldClassId.getText());
           // String logDeletedConsolateName = LecturerHandler.getLecturerById(divisionId).getLecturerName();
            //2. del from db
                ClassHandler.deleteClass(classId);
                
            // 3. remove From JTable
            DefaultTableModel tm = (DefaultTableModel) jTableClass.getModel();
            tm.removeRow(jTableClass.getSelectedRow());

            // 4. empty Fields
            emptyFieldsClasses();
         //   LogHandler.insertLog(9, 3, "Delete Consolate Ok - Consolate  : " + logDeletedConsolateName);
        }

    }                                                  

    private void jButtonUpdateClassActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            // 1, Read Fields
            int classId = Integer.parseInt(jTextFieldClassId.getText());
            String className = jTextFieldClassName.getText();
  String classTypeName = (String) jComboBoxClassType.getSelectedItem();

       Classes class1 = new Classes(classId, className, ClassTypeHandler.getClassTypeByName(classTypeName));

            // 2. update DB
               ClassHandler.updateClass(class1);
            
// 3. update JTable
            jTableClass.setValueAt(classId, jTableClass.getSelectedRow(), 0);
            jTableClass.setValueAt(className, jTableClass.getSelectedRow(), 1);

            // 4. Empty Fields
            emptyFieldsClasses();

         //   LogHandler.insertLog(8, 3, "Update Lecture Ok - Lecture : " + divisionName);
        }

    }                                                  

    private void jButtonAddClassActionPerformed(java.awt.event.ActionEvent evt) {                                                

        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            // 0. read Fields
            String className = jTextFieldClassName.getText();

            String classTypeName = (String) jComboBoxClassType.getSelectedItem();

            Classes class1 = new Classes(className, ClassTypeHandler.getClassTypeByName(classTypeName));

            // 1. Add row to DB            
                ClassHandler.insertClass(class1);
            // 2. Add row to JTable
            DefaultTableModel tm = (DefaultTableModel) jTableClass.getModel();
            Object[] rowData = {class1.getClassId(), class1.getClassName()};

            tm.addRow(rowData);

            /// refresh
            tm.setRowCount(0);
            getAllClasses();

            // 3. Empty fields
            emptyFieldsClasses();

            // 4. show Save Msg
            JOptionPane.showMessageDialog(null, "Data Saved Done", "Saving..", JOptionPane.INFORMATION_MESSAGE);

         //   LogHandler.insertLog(7, 3, "Create lecturer Ok - lecturer : " + lecturerName);
        }

    }                                               

    private void jTableClassMouseClicked(java.awt.event.MouseEvent evt) {                                         

        Integer classId = (Integer) jTableClass.getValueAt(jTableClass.getSelectedRow(), 0);
        String className = (String) jTableClass.getValueAt(jTableClass.getSelectedRow(), 1);
        String classTypeName = (String) jTableClass.getValueAt(jTableClass.getSelectedRow(), 2);

        jTextFieldClassId.setText(classId.toString());
        jTextFieldClassName.setText(className);
        jComboBoxClassType.setSelectedItem(ClassTypeHandler.getClassTypeByName(classTypeName).getClassTypeName());

    }                                        

    public void getAllCourses() {

// 1. Get All Software From DB
        ArrayList<Course> coursesList = CourseHandler.getAllCourses();
        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableCourse.getModel();

        for (Course course : coursesList) {
            Object[] rowData = {course.getCourseId(), course.getCourseName()};
            tm.addRow(rowData);
        }

    }

    public void getAllClasses() {
        // 1. Get All Software From DB
        ArrayList<Classes> classesList = ClassHandler.getAllClasses();

        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableClass.getModel();

        for (Classes class1 : classesList) {
            Object[] rowData = {class1.getClassId(), class1.getClassName(), class1.getClassType().getClassTypeName()};

            tm.addRow(rowData);
        }

    }

    private void emptyFieldsClasses() {
        jTextFieldClassId.setText("");
        jTextFieldClassName.setText("");
             jComboBoxClassType.setSelectedIndex(0);
           
    }

    private void emptyFieldsCourses() {
        jTextFieldCourseId.setText("");
        jTextFieldCourseName.setText("");
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonAddClass;
    private javax.swing.JButton jButtonAddCourse;
    private javax.swing.JButton jButtonCancelClass;
    private javax.swing.JButton jButtonCancelCourse;
    private javax.swing.JButton jButtonDeleteClass;
    private javax.swing.JButton jButtonDeleteCourse;
    private javax.swing.JButton jButtonUpdateClass;
    private javax.swing.JButton jButtonUpdateCourse;
    private javax.swing.JComboBox jComboBoxClassType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelConsolateTypeId;
    private javax.swing.JLabel jLabelKanaatId;
    private javax.swing.JLabel jLabelKanaatText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClass;
    private javax.swing.JTable jTableCourse;
    private javax.swing.JTextField jTextFieldClassId;
    private javax.swing.JTextField jTextFieldClassName;
    private javax.swing.JTextField jTextFieldCourseId;
    private javax.swing.JTextField jTextFieldCourseName;
    // End of variables declaration                   

}
