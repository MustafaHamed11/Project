/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zag_sched.lookups.gui;

import com.sun.glass.events.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static zag_sched.lookups.gui.JFrameMaster.checkConfirm;
import zag_sched.lookups.logs.LogHandler;
import zag_sched.lookups.lecturers.Lecturer;
import zag_sched.lookups.lecturers.LecturerHandler;
import zag_sched.lookups.departments.Department;
import zag_sched.lookups.departments.DepartmentHandler;
import zag_sched.lookups.lecturers.LecturersPositionHandler;

import zag_sched.users.User;
import zag_sched.users.UserHandler;

/**
 *
 * @author Administrator
 */
public class JInternalFrameLookupsLecturersDepts extends javax.swing.JInternalFrame {

    private JFrame masterForm;

    /**
     * Creates new form JInternalFrameLookups
     */
    public JInternalFrameLookupsLecturersDepts() {
        initComponents();
    }

    public JInternalFrameLookupsLecturersDepts(JFrame masterForm) {
        initComponents();
        this.masterForm = masterForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelConsolateTypeId = new javax.swing.JLabel();
        jTextFieldLecturerId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldLecturerName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLecturer = new javax.swing.JTable();
        jButtonAddLecturer = new javax.swing.JButton();
        jButtonUpdateLecturer = new javax.swing.JButton();
        jButtonDeleteLecturer = new javax.swing.JButton();
        jButtonCancelLecturer = new javax.swing.JButton();
        jComboBoxLecturerType = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldSearchLecturer = new javax.swing.JTextField();
        jButtonSearchLecturer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelKanaatId = new javax.swing.JLabel();
        jTextFieldDepartmentId = new javax.swing.JTextField();
        jLabelKanaatText = new javax.swing.JLabel();
        jTextFieldDepartmentName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDepartments = new javax.swing.JTable();
        jButtonAddDepartment = new javax.swing.JButton();
        jButtonUpdateDepartment = new javax.swing.JButton();
        jButtonDeleteDepartment = new javax.swing.JButton();
        jButtonCancelDepartment = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("أعضاء هيئة التدريس / الإدارات");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "أعضاء هيئة التدريس"));
        jPanel1.setForeground(new java.awt.Color(51, 255, 51));

        jLabelConsolateTypeId.setText("كود المحاضر");
        jLabelConsolateTypeId.setToolTipText("");

        jTextFieldLecturerId.setEditable(false);

        jLabel2.setText("اسم المحاضر");

        jTableLecturer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "كود المحاضر", "اسم المحاضر", "المنصب"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLecturer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLecturerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLecturer);

        jButtonAddLecturer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/Add.gif"))); // NOI18N
        jButtonAddLecturer.setText("إضافة");
        jButtonAddLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddLecturerActionPerformed(evt);
            }
        });

        jButtonUpdateLecturer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/save.png"))); // NOI18N
        jButtonUpdateLecturer.setText("تعديل");
        jButtonUpdateLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateLecturerActionPerformed(evt);
            }
        });

        jButtonDeleteLecturer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/delete_ena - Copy.png"))); // NOI18N
        jButtonDeleteLecturer.setText("مسح");
        jButtonDeleteLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteLecturerActionPerformed(evt);
            }
        });

        jButtonCancelLecturer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/refresh.png"))); // NOI18N
        jButtonCancelLecturer.setText("اعادة بدء");
        jButtonCancelLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelLecturerActionPerformed(evt);
            }
        });

        jLabel3.setText("المنصب");

        jTextFieldSearchLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchLecturerActionPerformed(evt);
            }
        });
        jTextFieldSearchLecturer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchLecturerKeyReleased(evt);
            }
        });

        jButtonSearchLecturer.setText("بحث");
        jButtonSearchLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchLecturerActionPerformed(evt);
            }
        });

        jLabel1.setText("ابحث باسم المحاضر");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldSearchLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSearchLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAddLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdateLecturer)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonDeleteLecturer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelLecturer))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelConsolateTypeId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxLecturerType, 0, 202, Short.MAX_VALUE)
                            .addComponent(jTextFieldLecturerName)
                            .addComponent(jTextFieldLecturerId))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldLecturerId)
                    .addComponent(jLabelConsolateTypeId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLecturerName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxLecturerType, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddLecturer)
                    .addComponent(jButtonUpdateLecturer)
                    .addComponent(jButtonDeleteLecturer)
                    .addComponent(jButtonCancelLecturer))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldSearchLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchLecturer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "الإدارات"));

        jLabelKanaatId.setText("كود الإدارة");

        jTextFieldDepartmentId.setEditable(false);

        jLabelKanaatText.setText("إسم الإدارة");

        jTableDepartments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "كود الإدارة", "إسم الإدارة"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDepartments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDepartmentsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableDepartments);

        jButtonAddDepartment.setIcon(new javax.swing.ImageIcon("D:\\Desktop\\Business Wallpapers\\VIP\\مشروع تخرج - سيستم الجدول - زقازيق\\Zah Sched App\\App\\ZagSchedApp\\src\\zag_sched\\lookups\\gui\\imgs\\Add.gif")); // NOI18N
        jButtonAddDepartment.setText("إضافة");
        jButtonAddDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddDepartmentActionPerformed(evt);
            }
        });

        jButtonUpdateDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/save.png"))); // NOI18N
        jButtonUpdateDepartment.setText("تعديل");
        jButtonUpdateDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateDepartmentActionPerformed(evt);
            }
        });

        jButtonDeleteDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/delete_ena.png"))); // NOI18N
        jButtonDeleteDepartment.setText("مسح");
        jButtonDeleteDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteDepartmentActionPerformed(evt);
            }
        });

        jButtonCancelDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/refresh.png"))); // NOI18N
        jButtonCancelDepartment.setText("إعادة بدء");
        jButtonCancelDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelDepartmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonAddDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdateDepartment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelKanaatText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelKanaatId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDepartmentName, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(jTextFieldDepartmentId))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDepartmentId, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabelKanaatId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKanaatText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddDepartment)
                    .addComponent(jButtonUpdateDepartment)
                    .addComponent(jButtonDeleteDepartment)
                    .addComponent(jButtonCancelDepartment))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>                        

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {                                         
        getAllLecturers();
            getAllDepartments();
         ////2- Fill Lecturer Types JCombo
        
           
        
         jComboBoxLecturerType.insertItemAt("", 0);
        jComboBoxLecturerType.setSelectedIndex(0);
        jComboBoxLecturerType.removeAllItems();

        LinkedHashMap<String, Integer> lecturerPositionsHM = LecturersPositionHandler.getAllLecturersPositionsMap();
        for (String LecturerPosName : lecturerPositionsHM.keySet()) {
            jComboBoxLecturerType.addItem(LecturerPosName);
            System.out.println("Add : " + LecturerPosName);
        }


    }                                        

    private void jButtonAddDepartmentActionPerformed(java.awt.event.ActionEvent evt) {                                                     
       
         int optionChoosen = JFrameMaster.checkConfirm();
         if (optionChoosen == JOptionPane.YES_OPTION) {        
         // 0. read Fields
        
         String departmentName = jTextFieldDepartmentName.getText();
      
         Department department = new Department(departmentName);
      
         // 1. Add row to DB
         DepartmentHandler.insertDepartment(department);

         // 2. Add row to JTable
         DefaultTableModel tm = (DefaultTableModel) jTableDepartments.getModel();
         Object[] rowData = {department.getDepartmentId(), department.getDepartmentName()};

         tm.addRow(rowData);

         /// refresh
         tm.setRowCount(0);
         getAllDepartments();

         // 3. Empty fields
         emptyFieldsDepartments();

         // 4. show Save Msg
         JOptionPane.showMessageDialog(null, "Data Saved Done", "Saving..", JOptionPane.INFORMATION_MESSAGE);
        
      //   LogHandler.insertLog(10, 4, "Create Department Ok - Department : "+ departmentName);
         }
         
    }                                                    

    private void jButtonUpdateDepartmentActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        
         int optionChoosen = JFrameMaster.checkConfirm();
         if (optionChoosen == JOptionPane.YES_OPTION) {  
         // 1, Read Fields
         int departmentId = Integer.parseInt(jTextFieldDepartmentId.getText());
         String departmentName = jTextFieldDepartmentName.getText();
        
        
         Department department = new Department(departmentId, departmentName);
            
         // 2. update DB
         DepartmentHandler.updateDepartment(department);

         // 3. update JTable
         jTableDepartments.setValueAt(departmentId, jTableDepartments.getSelectedRow(), 0);
         jTableDepartments.setValueAt(departmentName, jTableDepartments.getSelectedRow(), 1);
      
         // 4. Empty Fields
         emptyFieldsDepartments();
        
        // LogHandler.insertLog(11, 4, "Update Kanaat Ok - Kanaat : "+departmentName);
   
         }
        
    }                                                       

    private void jButtonDeleteDepartmentActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        
         int optionChoosen = JFrameMaster.checkConfirm();
         if (optionChoosen == JOptionPane.YES_OPTION) {  
         //1. read user id
         int departmentId = Integer.parseInt(jTextFieldDepartmentId.getText());
        // String logDeletedKanaatText = DepartmentHandler.getDepartmentById(departmentId).getDepartmentName();
         //2. del from db
         DepartmentHandler.deleteDepartment(departmentId);

         // 3. remove From JTable
         DefaultTableModel tm = (DefaultTableModel) jTableDepartments.getModel();
         tm.removeRow(jTableDepartments.getSelectedRow());

         // 4. empty Fields
         emptyFieldsDepartments();
        // LogHandler.insertLog(12, 4, "Delete Kanaat Ok - Kanaat  : "+logDeletedKanaatText);
         }
        
    }                                                       

    private void jTableDepartmentsMouseClicked(java.awt.event.MouseEvent evt) {                                               
        
         Integer departmentId = (Integer) jTableDepartments.getValueAt(jTableDepartments.getSelectedRow(), 0);
         String departmentName = (String) jTableDepartments.getValueAt(jTableDepartments.getSelectedRow(), 1);
  

         jTextFieldDepartmentId.setText(departmentId.toString());
         jTextFieldDepartmentName.setText(departmentName);
         
    }                                              

    private void jButtonCancelDepartmentActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        emptyFieldsDepartments();
    }                                                       

    private void jButtonCancelLecturerActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        emptyFieldsLecturers();
    }                                                     

    private void jButtonDeleteLecturerActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            //1. read user id
            int lecturerId = Integer.parseInt(jTextFieldLecturerId.getText());
            String logDeletedConsolateName = LecturerHandler.getLecturerById(lecturerId).getLecturerName();
            //2. del from db
            LecturerHandler.deleteLecturer(lecturerId);

            // 3. remove From JTable
            DefaultTableModel tm = (DefaultTableModel) jTableLecturer.getModel();
            tm.removeRow(jTableLecturer.getSelectedRow());

            // 4. empty Fields
            emptyFieldsLecturers();
            LogHandler.insertLog(9, 3, "Delete Consolate Ok - Consolate  : " + logDeletedConsolateName);
        }

    }                                                     

    private void jButtonUpdateLecturerActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            // 1, Read Fields
            int lecturerId = Integer.parseInt(jTextFieldLecturerId.getText());
            String lecturerName = jTextFieldLecturerName.getText();
  String lecturerPositionName = (String) jComboBoxLecturerType.getSelectedItem();

            Lecturer lecturer = new Lecturer(lecturerId, lecturerName, LecturersPositionHandler.getLecturersPositionByName(lecturerPositionName));

            // 2. update DB
            LecturerHandler.updateLecturer(lecturer);

            // 3. update JTable
            jTableLecturer.setValueAt(lecturerId, jTableLecturer.getSelectedRow(), 0);
            jTableLecturer.setValueAt(lecturerName, jTableLecturer.getSelectedRow(), 1);

            // 4. Empty Fields
            emptyFieldsLecturers();

            LogHandler.insertLog(8, 3, "Update Lecture Ok - Lecture : " + lecturerName);
        }

    }                                                     

    private void jButtonAddLecturerActionPerformed(java.awt.event.ActionEvent evt) {                                                   

        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            // 0. read Fields
            String lecturerName = jTextFieldLecturerName.getText();

            String lecturerPositionName = (String) jComboBoxLecturerType.getSelectedItem();

            Lecturer lecturer = new Lecturer(lecturerName, LecturersPositionHandler.getLecturersPositionByName(lecturerPositionName));

            // 1. Add row to DB
            LecturerHandler.insertLecturer(lecturer);

            // 2. Add row to JTable
            DefaultTableModel tm = (DefaultTableModel) jTableLecturer.getModel();
            Object[] rowData = {lecturer.getLecturerId(), lecturer.getLecturerName()};

            tm.addRow(rowData);

            /// refresh
            tm.setRowCount(0);
            getAllLecturers();

            // 3. Empty fields
            emptyFieldsLecturers();

            // 4. show Save Msg
            JOptionPane.showMessageDialog(null, "Data Saved Done", "Saving..", JOptionPane.INFORMATION_MESSAGE);

            LogHandler.insertLog(7, 3, "Create lecturer Ok - lecturer : " + lecturerName);
        }

    }                                                  

    private void jTableLecturerMouseClicked(java.awt.event.MouseEvent evt) {                                            

        Integer lecturerId = (Integer) jTableLecturer.getValueAt(jTableLecturer.getSelectedRow(), 0);
        String lecturerName = (String) jTableLecturer.getValueAt(jTableLecturer.getSelectedRow(), 1);
        String lecturerPositionName = (String) jTableLecturer.getValueAt(jTableLecturer.getSelectedRow(), 2);

        jTextFieldLecturerId.setText(lecturerId.toString());
        jTextFieldLecturerName.setText(lecturerName);
        jComboBoxLecturerType.setSelectedItem(LecturersPositionHandler.getLecturersPositionByName(lecturerPositionName).getLecturerPosName());

      


    }                                           

    private void jTextFieldSearchLecturerActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void jButtonSearchLecturerActionPerformed(java.awt.event.ActionEvent evt) {                                                      
           String lecturerNameFilter = jTextFieldSearchLecturer.getText();
// 1. Get All Software From DB
           System.out.println("filter data = "+lecturerNameFilter);
        ArrayList<Lecturer> LecturersList = LecturerHandler.filterLecturers(lecturerNameFilter);

        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableLecturer.getModel();
// 1. Clear JTable First
        tm.setRowCount(0);
        
        for (Lecturer lecturer : LecturersList) {
            Object[] rowData = {lecturer.getLecturerId(), lecturer.getLecturerName(), lecturer.getLecturerPosition().getLecturerPosName()};

            tm.addRow(rowData);
        }            
    }                                                     

    private void jTextFieldSearchLecturerKeyReleased(java.awt.event.KeyEvent evt) {                                                     
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
               String lecturerNameFilter = jTextFieldSearchLecturer.getText();
// 1. Get All Software From DB
        ArrayList<Lecturer> LecturersList = LecturerHandler.filterLecturers(lecturerNameFilter);

        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableLecturer.getModel();
// 1. Clear JTable First
        tm.setRowCount(0);
        for (Lecturer lecturer : LecturersList) {
            Object[] rowData = {lecturer.getLecturerId(), lecturer.getLecturerName(), lecturer.getLecturerPosition().getLecturerPosName()};

            tm.addRow(rowData);
        }            
        }
    }                                                    

    public void getAllDepartments() {

// 1. Get All Software From DB
        ArrayList<Department> departmentsList = DepartmentHandler.getAllDepartments();
        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableDepartments.getModel();

        for (Department department : departmentsList) {
            Object[] rowData = {department.getDepartmentId(), department.getDepartmentName()};
            tm.addRow(rowData);
        }

    }

    public void getAllLecturers() {
        // 1. Get All Software From DB
        ArrayList<Lecturer> LecturersList = LecturerHandler.getAllLecturers();

        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableLecturer.getModel();

        for (Lecturer lecturer : LecturersList) {
            Object[] rowData = {lecturer.getLecturerId(), lecturer.getLecturerName(), lecturer.getLecturerPosition().getLecturerPosName()};

            tm.addRow(rowData);
        }

    }

    private void emptyFieldsLecturers() {
        jTextFieldLecturerId.setText("");
        jTextFieldLecturerName.setText("");
             jComboBoxLecturerType.setSelectedIndex(0);
           
    }

    private void emptyFieldsDepartments() {
        jTextFieldDepartmentId.setText("");
        jTextFieldDepartmentName.setText("");
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonAddDepartment;
    private javax.swing.JButton jButtonAddLecturer;
    private javax.swing.JButton jButtonCancelDepartment;
    private javax.swing.JButton jButtonCancelLecturer;
    private javax.swing.JButton jButtonDeleteDepartment;
    private javax.swing.JButton jButtonDeleteLecturer;
    private javax.swing.JButton jButtonSearchLecturer;
    private javax.swing.JButton jButtonUpdateDepartment;
    private javax.swing.JButton jButtonUpdateLecturer;
    private javax.swing.JComboBox jComboBoxLecturerType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelConsolateTypeId;
    private javax.swing.JLabel jLabelKanaatId;
    private javax.swing.JLabel jLabelKanaatText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDepartments;
    private javax.swing.JTable jTableLecturer;
    private javax.swing.JTextField jTextFieldDepartmentId;
    private javax.swing.JTextField jTextFieldDepartmentName;
    private javax.swing.JTextField jTextFieldLecturerId;
    private javax.swing.JTextField jTextFieldLecturerName;
    private javax.swing.JTextField jTextFieldSearchLecturer;
    // End of variables declaration                   

}
