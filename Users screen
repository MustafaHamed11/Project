/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zag_sched.lookups.gui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import zag_sched.lookups.logs.LogHandler;
import zag_sched.users.User;
import zag_sched.users.UserHandler;

/**
 *
 * @author Administrator
 */
public class JInternalFrameUsersMgt extends javax.swing.JInternalFrame {

    private JFrame masterForm;

    /**
     * Creates new form JInternalFrameUsersMgt
     */
    public JInternalFrameUsersMgt() {
        initComponents();
    }

    public JInternalFrameUsersMgt(JFrame masterForm) {
        initComponents();
        this.masterForm = masterForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButtonUpdate = new javax.swing.JButton();
        jButtonAddUser = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelConfirmPassword = new javax.swing.JLabel();
        jTextFieldUserId = new javax.swing.JTextField();
        jTextFieldUserName = new javax.swing.JTextField();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jPasswordFieldConfirmPassword = new javax.swing.JPasswordField();
        jLabelUserId = new javax.swing.JLabel();
        jLabelUserName = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsers = new javax.swing.JTable();
        jButtonReset = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("إدارة المستخدمين");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/save.png"))); // NOI18N
        jButtonUpdate.setText("تعديل");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/Add.gif"))); // NOI18N
        jButtonAddUser.setText("إضافة");
        jButtonAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUserActionPerformed(evt);
            }
        });

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/delete_ena - Copy.png"))); // NOI18N
        jButtonDelete.setText("مسح");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelConfirmPassword.setText("إعادة كلمة السر");

        jTextFieldUserId.setEditable(false);

        jLabelUserId.setText("كود المستخدم");

        jLabelUserName.setText("اسم المستخدم");

        jLabelPassword.setText("كلمة السر");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelUserId)
                    .addComponent(jLabelUserName)
                    .addComponent(jLabelPassword)
                    .addComponent(jLabelConfirmPassword))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPasswordFieldConfirmPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(jTextFieldUserName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldUserId, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUserId)
                    .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUserName)
                    .addComponent(jTextFieldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword)
                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelConfirmPassword)
                    .addComponent(jPasswordFieldConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        jTableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "كود المستخدم", "اسم المستخدم", "تاريخ الإنشاء"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsers);

        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/refresh.png"))); // NOI18N
        jButtonReset.setText("إعادة بدء");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {                                         
        this.getAllUsers();
        // clear Role ComboBox First    
     //   jComboBoxRole.removeAllItems();

      
      //  jComboBoxRole.insertItemAt("", 0);
       // jComboBoxRole.setSelectedIndex(0);
    }                                        

    private void jTableUsersMouseClicked(java.awt.event.MouseEvent evt) {                                         

        Integer userId = (Integer) jTableUsers.getValueAt(jTableUsers.getSelectedRow(), 0);
        String userName = (String) jTableUsers.getValueAt(jTableUsers.getSelectedRow(), 1);



        jTextFieldUserId.setText(userId.toString());
        jTextFieldUserName.setText(userName);

        /// set the role Id Combo Box
      

    }                                        

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                              

        // 1, Read Fields
        int userId = Integer.parseInt(jTextFieldUserId.getText());
        String userName = jTextFieldUserName.getText();
        String userPassword = jPasswordFieldPassword.getText();
      //  String roleName = (String) jComboBoxRole.getSelectedItem();
            
        
        User user = null;
            
        // Check Password & Confirm Password
        if(!(jPasswordFieldPassword.getText().isEmpty()) && !(jPasswordFieldConfirmPassword.getText().isEmpty())){ // update pass
            if (!(jPasswordFieldPassword.getText().equals(jPasswordFieldConfirmPassword.getText()))) {
                JOptionPane.showMessageDialog(null, "Password / Confirm Password doesnot match", "Password Error..", JOptionPane.ERROR_MESSAGE);
                throw new NumberFormatException("Invalid Confirm PAssword");
            }else{ // will update pass > he entered pass & confirm pass correctly
                user = new User(userId, userName, userPassword, UserHandler.getUserById(userId).getCreatedDate());
                System.out.println("Will Update PAss : pass = "+jPasswordFieldPassword.getText());   
                JOptionPane.showMessageDialog(null, "Password will be updated", "Password Error..", JOptionPane.WARNING_MESSAGE);
            }
        
        }else{ // will not update password > one ot  them or both is null
              JOptionPane.showMessageDialog(null, "Password will not be updated", "Password Error..", JOptionPane.INFORMATION_MESSAGE);
            user = new User(userId, userName, UserHandler.getUserById(userId).getCreatedDate());
        }
   
        // 2. update DB
       UserHandler.updateUser(user);

        // 3. update JTable
        jTableUsers.setValueAt(userName, jTableUsers.getSelectedRow(), 1);
       // jTableUsers.setValueAt(UserHandler.getUserById(userId).getCreatedDate(), jTableUsers.getSelectedRow(), 2);
        //jTableUsers.setValueAt(roleName, jTableUsers.getSelectedRow(), 3);

        // 4. Empty Fields
        emptyFields();
        
        // Set Log
             //   LogHandler.insertLog(2, 2, "Update User Ok - User Id : "+user.getUserName());
    }                                             

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                              
        //1. read user id
        int userId = Integer.parseInt(jTextFieldUserId.getText());
//        String logDeletedUserName = UserHandler.getUserById(userId).getUserName();
        //2. del from db
        UserHandler.deleteUser(userId);

        // 3. remove From JTable
        DefaultTableModel tm = (DefaultTableModel) jTableUsers.getModel();
        tm.removeRow(jTableUsers.getSelectedRow());

        // 4. empty Fields
        emptyFields();
        
               
        // Set Log
              //  LogHandler.insertLog(3, 2, "Delete User Ok - User : "+logDeletedUserName);

    }                                             

    private void jButtonAddUserActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // 0. read Fields
        String userName = jTextFieldUserName.getText();
        String userPassword = jPasswordFieldPassword.getText();
        Date createdDate = new Date();
      
        User user = new User(userName, userPassword, createdDate);

        // Check Password with Confirm PAss
        if(!(jPasswordFieldPassword.getText().isEmpty()) && !(jPasswordFieldConfirmPassword.getText().isEmpty())){
            if (!(jPasswordFieldPassword.getText().equals(jPasswordFieldConfirmPassword.getText()))) {
                JOptionPane.showMessageDialog(null, "Password / Confirm Password doesnot match", "Password Error..", JOptionPane.ERROR_MESSAGE);
                throw new NumberFormatException("Invalid Confirm PAssword");
            }
        
        }else{
                  JOptionPane.showMessageDialog(null, "Password / Confirm Password Should not be empty", "Password Error..", JOptionPane.ERROR_MESSAGE);
                throw new NumberFormatException("Invalid Confirm PAssword");
        }

        // 1. Add row to DB
        UserHandler.insertUser(user);

        // 2. Add row to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableUsers.getModel();
        Object[] rowData = {user.getUserId(), user.getUserName(), user.getCreatedDate()};

        tm.addRow(rowData);

        /// refresh
        tm.setRowCount(0);
        getAllUsers();

        // 3. Empty fields
        emptyFields();

        // 4. show Save Msg
        JOptionPane.showMessageDialog(null, "Data Saved Done", "Saving..", JOptionPane.INFORMATION_MESSAGE);
        
             // Set Log
              //  LogHandler.insertLog(1, 2, "Create User Ok - User : "+ userName);
    }                                              

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {                                             
            emptyFields();
    }                                            
    public void emptyFields() {
        jTextFieldUserId.setText(null);
        jTextFieldUserName.setText(null);
        jPasswordFieldPassword.setText(null);
        jPasswordFieldConfirmPassword.setText(null);
        // empty role
      //  jComboBoxRole.setSelectedIndex(0);
    }

    public void getAllUsers() {
        // 1. Get All Software From DB
        ArrayList<User> usersList = UserHandler.getAllUsers();

        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableUsers.getModel();

        for (User user : usersList) {
            Object[] rowData = {user.getUserId(), user.getUserName(),
                user.getCreatedDate()};
            tm.addRow(rowData);
        }
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonAddUser;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabelConfirmPassword;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelUserId;
    private javax.swing.JLabel jLabelUserName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordFieldConfirmPassword;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsers;
    private javax.swing.JTextField jTextFieldUserId;
    private javax.swing.JTextField jTextFieldUserName;
    // End of variables declaration                   
}
