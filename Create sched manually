/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zag_sched.lookups.gui;

import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import zag_sched.lookups.classes.ClassHandler;
import zag_sched.lookups.classes.ClassTypeHandler;
import zag_sched.lookups.classes.Classes;
import zag_sched.lookups.courses.Course;
import zag_sched.lookups.courses.CourseHandler;
import static zag_sched.lookups.gui.JFrameMaster.checkConfirm;
import zag_sched.lookups.logs.LogHandler;
import zag_sched.lookups.lecturers.Lecturer;
import zag_sched.lookups.lecturers.LecturerHandler;
import zag_sched.lookups.departments.Department;
import zag_sched.lookups.departments.DepartmentHandler;
import zag_sched.lookups.divisions.Division;
import zag_sched.lookups.divisions.DivisionHandler;
import zag_sched.lookups.groups.Group;
import zag_sched.lookups.groups.GroupHandler;
import zag_sched.lookups.lecturers.LecturersPositionHandler;
import zag_sched.lookups.lectures.Lecture;
import zag_sched.lookups.lectures.LectureHandler;
import zag_sched.lookups.lectures.LectureType;
import zag_sched.lookups.lectures.LectureTypeHandler;
import zag_sched.lookups.periods.Day;
import zag_sched.lookups.periods.DayHandler;
import zag_sched.lookups.periods.Period;
import zag_sched.lookups.periods.PeriodHandler;
import zag_sched.lookups.periods.PeriodTimingHandler;
import zag_sched.lookups.sections.SectionHandler;

import zag_sched.users.User;
import zag_sched.users.UserHandler;

/**
 *
 * @author Administrator
 */
public class JInternalFrameLookupsLectures extends javax.swing.JInternalFrame {

    private JFrame masterForm;

    /**
     * Creates new form JInternalFrameLookups
     */
    public JInternalFrameLookupsLectures() {
        initComponents();
    }

    public JInternalFrameLookupsLectures(JFrame masterForm) {
        initComponents();
        this.masterForm = masterForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableLectures = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextFieldFilterTable = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxAddGroup = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxAddCourse = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxAddDay = new javax.swing.JComboBox();
        jComboBoxAddDivision = new javax.swing.JComboBox();
        jComboBoxAddLecturer = new javax.swing.JComboBox();
        jComboBoxAddPeriod1 = new javax.swing.JComboBox();
        jComboBoxAddClass = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxAddSection = new javax.swing.JComboBox();
        jButtonAddLecture = new javax.swing.JButton();
        jButtonUpdateLecture = new javax.swing.JButton();
        jButtonDeleteLecture = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxAddLectureType = new javax.swing.JComboBox();
        jTextFieldLectureId = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("المحاضرات");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "المحاضرات"));

        jTableLectures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "رقم", "محاضرة / سيكشن", "اليوم", "القاعة", "الفرقة", "المجموعة", "السيكشن", "المادة", "المحاضر", "الفترة"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLectures.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLecturesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableLectures);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("بحث"));

        jButton1.setText("بحث");

        jTextFieldFilterTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldFilterTableKeyReleased(evt);
            }
        });

        jLabel8.setText("ابحث في الجدول");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jButton1)
                .addContainerGap(135, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jTextFieldFilterTable)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(108, 108, 108))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldFilterTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("المحاضرات"));

        jComboBoxAddGroup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("اليوم");

        jLabel2.setText("الفرقة");

        jLabel3.setText("المجموعة");

        jLabel4.setText("المادة");

        jComboBoxAddCourse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("المحاضر");

        jLabel6.setText("القاعة");

        jLabel7.setText("فترة");

        jComboBoxAddDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxAddDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxAddDayItemStateChanged(evt);
            }
        });

        jComboBoxAddDivision.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxAddDivision.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxAddDivisionItemStateChanged(evt);
            }
        });

        jComboBoxAddLecturer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxAddPeriod1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxAddClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("السيكشن");

        jComboBoxAddSection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonAddLecture.setText("إضافة محاضرة");
        jButtonAddLecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddLectureActionPerformed(evt);
            }
        });

        jButtonUpdateLecture.setText("تعديل محاضرة");
        jButtonUpdateLecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateLectureActionPerformed(evt);
            }
        });

        jButtonDeleteLecture.setText("مسح محاضرة");
        jButtonDeleteLecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteLectureActionPerformed(evt);
            }
        });

        jButton5.setText("إعادة بدء");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel18.setText("محاضرة / سيكشن");

        jComboBoxAddLectureType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxAddLectureType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxAddLectureTypeItemStateChanged(evt);
            }
        });
        jComboBoxAddLectureType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAddLectureTypeActionPerformed(evt);
            }
        });

        jTextFieldLectureId.setEnabled(false);

        jLabel19.setText("id");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jButtonAddLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonUpdateLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonDeleteLecture, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldLectureId)
                        .addGap(8, 8, 8))
                    .addComponent(jComboBoxAddDivision, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxAddCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxAddDay, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(256, 256, 256))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxAddLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBoxAddPeriod1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(37, 37, 37)
                                    .addComponent(jComboBoxAddLectureType, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap(567, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jComboBoxAddSection, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLectureId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxAddPeriod1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jComboBoxAddLectureType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jComboBoxAddLecturer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxAddDay, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxAddDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBoxAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddLecture)
                    .addComponent(jButtonUpdateLecture)
                    .addComponent(jButtonDeleteLecture)
                    .addComponent(jButton5))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(54, 54, 54)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jComboBoxAddSection, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(138, Short.MAX_VALUE)))
        );

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zag_sched/lookups/gui/imgs/zag.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {                                         

        getAllLecturers();

        ////2- Fill Lecture Type JCombo        
        jComboBoxAddLectureType.removeAllItems();
        jComboBoxAddLectureType.insertItemAt("", 0);
        jComboBoxAddLectureType.setSelectedIndex(0);

        LinkedHashMap<String, Integer> lectureTypeHM = LectureTypeHandler.getAllLectureTypesMap();
        for (String groupName : lectureTypeHM.keySet()) {
            jComboBoxAddLectureType.addItem(groupName);
            System.out.println("Add : " + groupName);
        }
        jComboBoxAddLectureType.setSelectedIndex(1);

        ////2- Fill Days JCombo        
        jComboBoxAddDay.removeAllItems();
        jComboBoxAddDay.insertItemAt("", 0);
        jComboBoxAddDay.setSelectedIndex(0);

        LinkedHashMap<String, Integer> daysHM = DayHandler.getAllDaysMap();
        for (String dayName : daysHM.keySet()) {
            jComboBoxAddDay.addItem(dayName);
            System.out.println("Add : " + dayName);
        }
        jComboBoxAddDay.setSelectedIndex(1);

        ////2- Fill Periods JCombo        
        jComboBoxAddPeriod1.removeAllItems();
        jComboBoxAddPeriod1.insertItemAt("", 0);
        jComboBoxAddPeriod1.setSelectedIndex(0);

        String dayName = (String) jComboBoxAddDay.getSelectedItem();
        Day day = DayHandler.getDayByName(dayName);
        LinkedHashMap<String, Integer> periodsHM = PeriodHandler.getAllPeriodsMap(day.getDayId());
        for (String periodName : periodsHM.keySet()) {
            jComboBoxAddPeriod1.addItem(periodName);
            System.out.println("Add : " + periodName);
        }

        ////2- Fill Class JCombo        
        jComboBoxAddClass.removeAllItems();
        jComboBoxAddClass.insertItemAt("", 0);
        jComboBoxAddClass.setSelectedIndex(0);

        String lectureTypeName = (String) jComboBoxAddLectureType.getSelectedItem();
        LectureType lectureType = LectureTypeHandler.getLectureTypeByName(lectureTypeName);

        LinkedHashMap<String, Integer> classesHM = ClassHandler.getAllClassesMap(lectureType.getLectureTypeId());
        for (String className : classesHM.keySet()) {
            jComboBoxAddClass.addItem(className);
            System.out.println("Add : " + className);
        }

        ////2- Fill Division JCombo        
        jComboBoxAddDivision.removeAllItems();
        jComboBoxAddDivision.insertItemAt("", 0);
        jComboBoxAddDivision.setSelectedIndex(0);

        LinkedHashMap<String, Integer> divisionsHM = DivisionHandler.getAllDivisionsMap();
        for (String divisionName : divisionsHM.keySet()) {
            jComboBoxAddDivision.addItem(divisionName);
            System.out.println("Add : " + divisionName);
        }
        jComboBoxAddDivision.setSelectedIndex(1);

        ////2- Fill Groups JCombo        
        jComboBoxAddGroup.removeAllItems();
        jComboBoxAddGroup.insertItemAt("", 0);
        jComboBoxAddGroup.setSelectedIndex(0);

        String divisionName = (String) jComboBoxAddDivision.getSelectedItem();
        Division division = DivisionHandler.getDivisionByName(divisionName);

        LinkedHashMap<String, Integer> groupsHM = GroupHandler.getAllGroupsMap(division.getDivisionId());
        for (String groupName : groupsHM.keySet()) {
            jComboBoxAddGroup.addItem(groupName);
            System.out.println("Add : " + groupName);
        }

        ////2- Fill Course JCombo        
        jComboBoxAddCourse.removeAllItems();
        jComboBoxAddCourse.insertItemAt("", 0);
        jComboBoxAddCourse.setSelectedIndex(0);

        LinkedHashMap<String, Integer> coursesHM = CourseHandler.getAllCoursesMap();
        for (String course : coursesHM.keySet()) {
            jComboBoxAddCourse.addItem(course);
            System.out.println("Add : " + course);
        }

        ////2- Fill Lecturer JCombo        
        jComboBoxAddLecturer.removeAllItems();
        jComboBoxAddLecturer.insertItemAt("", 0);
        jComboBoxAddLecturer.setSelectedIndex(0);

        LinkedHashMap<String, Integer> lecturersHM = LecturerHandler.getAllLecturersMap();
        for (String lecturer : lecturersHM.keySet()) {
            jComboBoxAddLecturer.addItem(lecturer);
            System.out.println("Add : " + lecturer);
        }

        ////2- Fill Section JCombo        
        jComboBoxAddSection.removeAllItems();
        jComboBoxAddSection.insertItemAt("", 0);
        jComboBoxAddSection.setSelectedIndex(0);
        /*
         LinkedHashMap<String, Integer> sectionsHM = SectionHandler.getAllSectionsMap();
         for (String section : sectionsHM.keySet()) {
         jComboBoxAddSection.addItem(section);
         System.out.println("Add : " + section);
         }
         */

    }                                        

    private void jTableLecturesMouseClicked(java.awt.event.MouseEvent evt) {                                            
        int lectureId = (Integer) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 0);
        String lectureTypeName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 1);
        String dayName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 2);
        String className = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 3);
        String divisionName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 4);
        String groupName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 5);
        String sectionName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 6);
        String courseName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 7);
        String lecturerName = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 8);
        String periodName1 = (String) jTableLectures.getValueAt(jTableLectures.getSelectedRow(), 9);

        jTextFieldLectureId.setText(String.valueOf(lectureId));

        jComboBoxAddLectureType.setSelectedItem(lectureTypeName);
        jComboBoxAddDay.setSelectedItem(dayName);
        jComboBoxAddClass.setSelectedItem(className);
        jComboBoxAddDivision.setSelectedItem(divisionName);
        jComboBoxAddGroup.setSelectedItem(groupName);
        jComboBoxAddSection.setSelectedItem(sectionName);
        jComboBoxAddCourse.setSelectedItem(courseName);
        jComboBoxAddLecturer.setSelectedItem(lecturerName);
        jComboBoxAddPeriod1.setSelectedItem(periodName1);


    }                                           

    private void jButtonUpdateLectureActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            // 1, Read Fields
            int lectureId = Integer.parseInt(jTextFieldLectureId.getText());
            String dayName = (String) jComboBoxAddDay.getSelectedItem();
            String lectureTypeName = (String) jComboBoxAddLectureType.getSelectedItem();
            String className = (String) jComboBoxAddClass.getSelectedItem();
            String divisionName = (String) jComboBoxAddDivision.getSelectedItem();

            String groupName = (String) jComboBoxAddGroup.getSelectedItem();

            String sectionName = (String) jComboBoxAddSection.getSelectedItem();

            String courseName = (String) jComboBoxAddCourse.getSelectedItem();

            String lecturerName = (String) jComboBoxAddLecturer.getSelectedItem();

            String periodName1 = (String) jComboBoxAddPeriod1.getSelectedItem();

            Lecture lecture = new Lecture(
                    lectureId,
                    // Lecture Type
                    LectureTypeHandler.getLectureTypeByName(lectureTypeName),
                    // Group
                    GroupHandler.getGroupByName(groupName),
                    // Course
                    CourseHandler.getCourseByName(courseName),
                    // Lecturer
                    LecturerHandler.getLecturerByName(lecturerName),
                    // Section
                    SectionHandler.getSectionByName(sectionName),
                    // Period
                    PeriodHandler.getPeriodByName(periodName1),
                    // Class
                    ClassHandler.getClassByName(className)
            );

            // 2. update DB
            LectureHandler.updateLecture(lecture);

            // 3. update JTable
            jTableLectures.setValueAt(lectureTypeName, jTableLectures.getSelectedRow(), 1);
            jTableLectures.setValueAt(dayName, jTableLectures.getSelectedRow(), 2);
            jTableLectures.setValueAt(className, jTableLectures.getSelectedRow(), 3);
            jTableLectures.setValueAt(divisionName, jTableLectures.getSelectedRow(), 4);
            jTableLectures.setValueAt(groupName, jTableLectures.getSelectedRow(), 5);
            jTableLectures.setValueAt(sectionName, jTableLectures.getSelectedRow(), 6);
            jTableLectures.setValueAt(courseName, jTableLectures.getSelectedRow(), 7);
            jTableLectures.setValueAt(lecturerName, jTableLectures.getSelectedRow(), 8);
            jTableLectures.setValueAt(periodName1, jTableLectures.getSelectedRow(), 9);

            // 4. Empty Fields
            emptyFieldsLectures();
        }
    }                                                    

    private void jButtonAddLectureActionPerformed(java.awt.event.ActionEvent evt) {                                                  

        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            // 0. read Fields

            String dayName = (String) jComboBoxAddDay.getSelectedItem();
            String lectureTypeName = (String) jComboBoxAddLectureType.getSelectedItem();
            String className = (String) jComboBoxAddClass.getSelectedItem();
            String divisionName = (String) jComboBoxAddDivision.getSelectedItem();

            String groupName = (String) jComboBoxAddGroup.getSelectedItem();

            String sectionName = (String) jComboBoxAddSection.getSelectedItem();

            String courseName = (String) jComboBoxAddCourse.getSelectedItem();

            String lecturerName = (String) jComboBoxAddLecturer.getSelectedItem();

            String periodName1 = (String) jComboBoxAddPeriod1.getSelectedItem();

            Lecture lecture = new Lecture(
                    // Lecture Type
                    LectureTypeHandler.getLectureTypeByName(lectureTypeName),
                    // Group
                    GroupHandler.getGroupByName(groupName),
                    // Course
                    CourseHandler.getCourseByName(courseName),
                    // Lecturer
                    LecturerHandler.getLecturerByName(lecturerName),
                    // Section
                    SectionHandler.getSectionByName(sectionName),
                    // Period
                    PeriodHandler.getPeriodByName(periodName1),
                    // Class
                    ClassHandler.getClassByName(className)
            );

            // 1. Add row to DB
            LectureHandler.insertLecture(lecture);

            // 2. Add row to JTable
            DefaultTableModel tm = (DefaultTableModel) jTableLectures.getModel();
            Object[] rowData
                    = {lecture.getLectureId(),
                        lecture.getLectureType().getLectureTypeName(),
                        lecture.getPeriod().getDay().getDayName(),
                        lecture.getClasses().getClassName(),
                        lecture.getGroup().getGroupName(),
                        lecture.getSection().getSectionName(),
                        lecture.getCourse().getCourseName(),
                        lecture.getLecturer().getLecturerName(),
                        lecture.getPeriod().getPeriodName()
                    };

            tm.addRow(rowData);

            /// refresh
            tm.setRowCount(0);
            getAllLecturers();

            // 3. Empty fields
            emptyFieldsLectures();
            // 4. show Save Msg
            JOptionPane.showMessageDialog(null, "Data Saved Done", "Saving..", JOptionPane.INFORMATION_MESSAGE);

            //   LogHandler.insertLog(7, 3, "Create lecturer Ok - lecturer : " + lecturerName);
        }

    }                                                 

    private void jButtonDeleteLectureActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        int optionChoosen = JFrameMaster.checkConfirm();
        if (optionChoosen == JOptionPane.YES_OPTION) {
            //1. read user id
            int lectureId = Integer.parseInt(jTextFieldLectureId.getText());

            //2. del from db
            LectureHandler.deleteLecture(lectureId);

            // 3. remove From JTable
            DefaultTableModel tm = (DefaultTableModel) jTableLectures.getModel();
            tm.removeRow(jTableLectures.getSelectedRow());

            // 4. empty Fields
            emptyFieldsLectures();
//            LogHandler.insertLog(9, 3, "Delete Consolate Ok - Consolate  : " + logDeletedConsolateName);
        }

    }                                                    

    private void jTextFieldFilterTableKeyReleased(java.awt.event.KeyEvent evt) {                                                  
        DefaultTableModel tm = (DefaultTableModel) jTableLectures.getModel();
        String filterText = jTextFieldFilterTable.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter(tm);
        jTableLectures.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(filterText));
    }                                                 

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        emptyFieldsLectures();
    }                                        

    private void jComboBoxAddDayItemStateChanged(java.awt.event.ItemEvent evt) {                                                 
        String dayName = (String) jComboBoxAddDay.getSelectedItem();

        ////2- Fill Periods JCombo        
        jComboBoxAddPeriod1.removeAllItems();
        jComboBoxAddPeriod1.insertItemAt("", 0);
        jComboBoxAddPeriod1.setSelectedIndex(0);

        Day day = DayHandler.getDayByName(dayName);
        if (day != null) {
            LinkedHashMap<String, Integer> periodsHM = PeriodHandler.getAllPeriodsMap(day.getDayId());
            for (String periodName : periodsHM.keySet()) {
                jComboBoxAddPeriod1.addItem(periodName);
                System.out.println("Add : " + periodName);
            }
        }

    }                                                

    private void jComboBoxAddLectureTypeItemStateChanged(java.awt.event.ItemEvent evt) {                                                         
        String lectureTypeName = (String) jComboBoxAddLectureType.getSelectedItem();

        ////2- Fill Periods JCombo        
        jComboBoxAddClass.removeAllItems();
        jComboBoxAddClass.insertItemAt("", 0);
        jComboBoxAddClass.setSelectedIndex(0);

        LectureType lectureType = LectureTypeHandler.getLectureTypeByName(lectureTypeName);

        if (lectureType != null) {
            LinkedHashMap<String, Integer> classesHM = ClassHandler.getAllClassesMap(lectureType.getLectureTypeId());
            for (String classes : classesHM.keySet()) {
                jComboBoxAddClass.addItem(classes);
                System.out.println("Add : " + classes);
            }

            if (lectureType.getLectureTypeId() == 2) { // only sections

                ////2- Fill Section JCombo        
                jComboBoxAddSection.removeAllItems();
                jComboBoxAddSection.insertItemAt("", 0);
                jComboBoxAddSection.setSelectedIndex(0);

                LinkedHashMap<String, Integer> sectionsHM = SectionHandler.getAllSectionsMap();
                for (String section : sectionsHM.keySet()) {
                    jComboBoxAddSection.addItem(section);
                    System.out.println("Add : " + section);
                }

            } else {
                jComboBoxAddSection.removeAllItems();
            }

        }


    }                                                        

    private void jComboBoxAddLectureTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        // TODO add your handling code here:
    }                                                       

    private void jComboBoxAddDivisionItemStateChanged(java.awt.event.ItemEvent evt) {                                                      
        String divisionName = (String) jComboBoxAddDivision.getSelectedItem();

        ////2- Fill Groups JCombo        
        jComboBoxAddGroup.removeAllItems();
        jComboBoxAddGroup.insertItemAt("", 0);
        jComboBoxAddGroup.setSelectedIndex(0);

        Division division = DivisionHandler.getDivisionByName(divisionName);

        if (division != null) {
            LinkedHashMap<String, Integer> groupsHM = GroupHandler.getAllGroupsMap(division.getDivisionId());
            for (String groupName : groupsHM.keySet()) {
                jComboBoxAddGroup.addItem(groupName);
                System.out.println("Add : " + groupName);
            }
        }


    }                                                     

    public void getAllLecturers() {
        // 1. Get All Software From DB
        ArrayList<Lecture> lecturesList = LectureHandler.getAllLectures();

        // 2. Add Rows to JTable
        DefaultTableModel tm = (DefaultTableModel) jTableLectures.getModel();

        for (Lecture lecture : lecturesList) {

            if (lecture.getGroup() != null) {

                Object[] rowData = {
                    lecture.getLectureId(),
                    lecture.getLectureType().getLectureTypeName(),
                    lecture.getPeriod().getDay().getDayName(),
                    lecture.getClasses().getClassName(),
                    lecture.getGroup().getDivision().getDivisionName(),
                    lecture.getGroup().getGroupName(),
                    "",
                    lecture.getCourse().getCourseName(),
                    lecture.getLecturer().getLecturerName(),
                    lecture.getPeriod().getPeriodName()
                };
                tm.addRow(rowData);
            } 
            if (lecture.getSection() != null) {

                Object[] rowData = {
                    lecture.getLectureId(),
                    lecture.getLectureType().getLectureTypeName(),
                    lecture.getPeriod().getDay().getDayName(),
                    lecture.getClasses().getClassName(),
                    lecture.getSection().getGroup().getDivision().getDivisionName(),
                    lecture.getSection().getGroup().getGroupName(),
                    lecture.getSection().getSectionName(),
                    lecture.getCourse().getCourseName(),
                    lecture.getLecturer().getLecturerName(),
                    lecture.getPeriod().getPeriodName()
                };
                tm.addRow(rowData);
          } 
//                else {
//
//                Object[] rowData = {
//                    lecture.getLectureId(),
//                    lecture.getLectureType().getLectureTypeName(),
//                    lecture.getPeriod().getDay().getDayName(),
//                    lecture.getClasses().getClassName(),
//                    lecture.getGroup().getDivision().getDivisionName(),
//                    lecture.getGroup().getGroupName(),
//                    lecture.getSection().getSectionName(),
//                    lecture.getCourse().getCourseName(),
//                    lecture.getLecturer().getLecturerName(),
//                    lecture.getPeriod().getPeriodName()
//                };
//                tm.addRow(rowData);
//            }

        }

    }


    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonAddLecture;
    private javax.swing.JButton jButtonDeleteLecture;
    private javax.swing.JButton jButtonUpdateLecture;
    private javax.swing.JComboBox jComboBoxAddClass;
    private javax.swing.JComboBox jComboBoxAddCourse;
    private javax.swing.JComboBox jComboBoxAddDay;
    private javax.swing.JComboBox jComboBoxAddDivision;
    private javax.swing.JComboBox jComboBoxAddGroup;
    private javax.swing.JComboBox jComboBoxAddLectureType;
    private javax.swing.JComboBox jComboBoxAddLecturer;
    private javax.swing.JComboBox jComboBoxAddPeriod1;
    private javax.swing.JComboBox jComboBoxAddSection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableLectures;
    private javax.swing.JTextField jTextFieldFilterTable;
    private javax.swing.JTextField jTextFieldLectureId;
    // End of variables declaration                   

    private void emptyFieldsLectures() {

        jTextFieldLectureId.setText(null);

        jComboBoxAddLectureType.setSelectedIndex(0);
        jComboBoxAddDay.setSelectedIndex(0);
        jComboBoxAddClass.setSelectedIndex(0);
        jComboBoxAddDivision.setSelectedIndex(0);
        jComboBoxAddGroup.setSelectedIndex(0);
        jComboBoxAddSection.setSelectedIndex(0);
        jComboBoxAddCourse.setSelectedIndex(0);
        jComboBoxAddLecturer.setSelectedIndex(0);
        jComboBoxAddPeriod1.setSelectedIndex(0);

    }

}
